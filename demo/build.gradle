apply plugin: 'application'

mainClassName = "T"

test {
    beforeTest { desc ->
        logger.quiet("Running test: " + desc)
    }

    afterTest { desc, result ->
        if (result.resultType == TestResult.ResultType.FAILURE) {
            logger.quiet("Failed test ${desc.name} [${desc.className}] with exception: ${result.exception}")
            if (result.exception != null) {
                result.exception.printStackTrace()
            }
        }
    }
}

tasks.withType(Test) {
    useJUnit()
    // systemProperty 'co.paralleluniverse.fibers.verifyInstrumentation', 'true'

    jvmArgs "-Xmx2048m"
    doLast() {
        println "file://" + getReports().getHtml().getDestination() + "/index.html"
    }
}



if (project.hasProperty('method')) {
    apply from: "${project.getProperty('method')}.gradle"
} else {
    apply from: "agent.gradle"
}

defaultTasks 'test'

dependencies{
    // https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.12.1'

    compile project(":core")

}